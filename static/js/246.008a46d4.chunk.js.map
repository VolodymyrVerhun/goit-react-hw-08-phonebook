{"version":3,"file":"static/js/246.008a46d4.chunk.js","mappings":"yOAae,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,KAE1BC,EAAAA,EAAAA,YAAU,WACRT,GAASU,EAAAA,EAAAA,MACV,GAAE,CAACV,IAEJ,IAkBMW,EAAcC,MAAMC,QAAQX,IAAaA,EAASY,OAAS,EACjE,OACE,4BACE,wBAAI,eACJ,kBAAMC,SAtBW,SAAAC,GACnBA,EAAMC,iBACN,IAGMC,EAAW,CACfC,KAJWH,EAAMI,cAAcC,SAASC,YAAYC,MAKpDC,OAJaR,EAAMI,cAAcC,SAASI,cAAcF,OAM1DG,QAAQC,IAAI,aAAcT,GAC1BlB,GAAS4B,EAAAA,EAAAA,IAAYV,IACrBF,EAAMI,cAAcS,OACrB,EAUG,WACE,8BACE,uBAAG,WACH,kBAAOC,KAAK,OAAOC,UAAQ,EAACZ,KAAK,cAAca,UAAW,QAE5D,8BACE,uBAAG,aACH,kBAAOF,KAAK,SAASC,UAAQ,EAACZ,KAAK,gBAAgBa,UAAW,QAEhE,0BACE,mBAAQF,KAAK,SAAb,SAAsB,qBAGf,OAAVvB,IACC,cAAG0B,UAAU,QAAb,SAAqB,+CAEtB5B,IAAa,SAAC,IAAD,KACd,wBACGM,GACCT,EAASgC,KAAI,YAA2B,IAAxBf,EAAuB,EAAvBA,KAAMK,EAAiB,EAAjBA,OAAQW,EAAS,EAATA,GAC5B,OACE,2BACE,0BAAI,SACKhB,GACP,mBAAQiB,QAAS,kBAhCLC,EAgC+BF,OA/BzDnC,GAASsC,EAAAA,EAAAA,IAAeD,IADE,IAAAA,CAgCK,EAAjB,SAAgD,aAIlD,yBAAG,kBACa,uBAAIb,SARbW,EAYZ,QAIV,C","sources":["pages/ContactsPage.jsx"],"sourcesContent":["import Loader from 'components/Loader/Loader';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  addContacts,\n  deleteContacts,\n  requestContacts,\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contactsSlice';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(requestContacts());\n  }, [dispatch]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const name = event.currentTarget.elements.contactName.value;\n    const number = event.currentTarget.elements.contactNumber.value;\n\n    const formData = {\n      name,\n      number,\n    };\n    console.log('formData: ', formData);\n    dispatch(addContacts(formData));\n    event.currentTarget.reset();\n  };\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContacts(contactId));\n  };\n\n  const showContact = Array.isArray(contacts) && contacts.length > 0;\n  return (\n    <div>\n      <h1>PhoneBook</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <p>Name:</p>\n          <input type=\"text\" required name=\"contactName\" minLength={2} />\n        </label>\n        <label>\n          <p>Number:</p>\n          <input type=\"number\" required name=\"contactNumber\" minLength={6} />\n        </label>\n        <div>\n          <button type=\"submit\">Add contact</button>\n        </div>\n      </form>\n      {error !== null && (\n        <p className=\"error\">Ooops, some error. Please try again later.</p>\n      )}\n      {isLoading && <Loader />}\n      <ul>\n        {showContact &&\n          contacts.map(({ name, number, id }) => {\n            return (\n              <li key={id}>\n                <h3>\n                  Name: {name}\n                  <button onClick={() => handleDeleteContact(id)}>\n                    &times;\n                  </button>\n                </h3>\n                <p>\n                  Phone Number: <b>{number}</b>\n                </p>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n}\n"],"names":["ContactsPage","dispatch","useDispatch","contacts","useSelector","selectContacts","isLoading","selectIsLoading","error","selectError","useEffect","requestContacts","showContact","Array","isArray","length","onSubmit","event","preventDefault","formData","name","currentTarget","elements","contactName","value","number","contactNumber","console","log","addContacts","reset","type","required","minLength","className","map","id","onClick","contactId","deleteContacts"],"sourceRoot":""}