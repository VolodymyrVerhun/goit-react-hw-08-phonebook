{"version":3,"file":"static/js/58.c4db3d13.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"block\":\"ContactsPage_block__fG-VT\",\"tittle\":\"ContactsPage_tittle__vA1XY\",\"form\":\"ContactsPage_form__lvmMB\",\"input\":\"ContactsPage_input__1N1Rw\",\"span\":\"ContactsPage_span__0GQ1X\",\"btn\":\"ContactsPage_btn__++YD-\",\"flex_block\":\"ContactsPage_flex_block__Ts0sx\",\"container\":\"ContactsPage_container__BnqXB\",\"list\":\"ContactsPage_list__SUsK-\",\"li\":\"ContactsPage_li__2A9xU\",\"btndel\":\"ContactsPage_btndel__KObvo\",\"contact\":\"ContactsPage_contact__4HmFB\",\"b\":\"ContactsPage_b__M5QBz\"};","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"Filter_block__rFk3H\",\"form\":\"Filter_form__wVnxJ\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\n\nimport style from './Filter.module.css';\nimport { setFilterValue } from 'redux/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from 'redux/contactsSlice';\n\nconst selectFilterValue = state => state.filter;\nexport const selectFilterContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, value) => {\n    const normalized = value.toLowerCase().trim();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalized)\n    );\n  }\n);\nexport default function Filter() {\n  const value = useSelector(selectFilterValue);\n\n  const dispatch = useDispatch();\n  const handleChange = e => {\n    dispatch(setFilterValue(e.target.value));\n  };\n  return (\n    <>\n      <label className={style.label} htmlFor=\"number\">\n        Find contacts by name\n      </label>\n      <input\n        className={style.input}\n        onChange={handleChange}\n        value={value}\n        type=\"text\"\n      />\n    </>\n  );\n}\n","import Loader from 'components/Loader/Loader';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport style from './ContactsPage.module.css';\n\nimport {\n  addContacts,\n  deleteContacts,\n  requestContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contactsSlice';\nimport Filter, { selectFilterContacts } from 'components/Filter/Filter';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectFilterContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(requestContacts());\n  }, [dispatch]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const name = event.currentTarget.elements.contactName.value;\n    const number = event.currentTarget.elements.contactNumber.value;\n\n    const formData = {\n      name,\n      number,\n    };\n    console.log('formData: ', formData);\n    dispatch(addContacts(formData));\n    event.currentTarget.reset();\n  };\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContacts(contactId));\n  };\n\n  const showContact = Array.isArray(contacts) && contacts.length > 0;\n  return (\n    <div className={style.block}>\n      <h1 className={style.tittle}>PhoneBook</h1>\n      <div className={style.flex_block}>\n        <form className={style.form} onSubmit={handleSubmit}>\n          <label>\n            <p className={style.span}>Name:</p>\n            <input\n              className={style.input}\n              type=\"text\"\n              required\n              placeholder=\"Enter your name...\"\n              name=\"contactName\"\n              minLength={2}\n            />\n          </label>\n          <label>\n            <p className={style.span}>Number:</p>\n            <input\n              className={style.input}\n              type=\"number\"\n              required\n              placeholder=\"Enter your number...\"\n              name=\"contactNumber\"\n              minLength={6}\n            />\n          </label>\n          <div>\n            <button className={style.btn} type=\"submit\">\n              Add contact\n            </button>\n          </div>\n        </form>\n        {error !== null && (\n          <p className=\"error\">Ooops, some error. Please try again later.</p>\n        )}\n        {isLoading && <Loader />}\n\n        <div className={style.container}>\n          <Filter />\n          <ul className={style.list}>\n            {showContact &&\n              contacts.map(({ name, number, id }) => {\n                return (\n                  <li className={style.li} key={id}>\n                    <div className={style.contact}>\n                      <p>\n                        Name: <b className={style.b}>{name}</b>\n                      </p>\n                      <p>\n                        Phone Number: <b className={style.b}>{number}</b>\n                      </p>\n                    </div>\n                    <button\n                      className={style.btndel}\n                      onClick={() => handleDeleteContact(id)}\n                    >\n                      delete\n                    </button>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["selectFilterValue","state","filter","selectFilterContacts","createSelector","selectContacts","contacts","value","normalized","toLowerCase","trim","contact","name","includes","Filter","useSelector","dispatch","useDispatch","className","style","htmlFor","onChange","e","setFilterValue","target","type","ContactsPage","isLoading","selectIsLoading","error","selectError","useEffect","requestContacts","showContact","Array","isArray","length","onSubmit","event","preventDefault","formData","currentTarget","elements","contactName","number","contactNumber","console","log","addContacts","reset","required","placeholder","minLength","Loader","map","id","onClick","contactId","deleteContacts"],"sourceRoot":""}